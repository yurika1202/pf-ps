@use '../functions/' as *;
@use '../mixin/' as mix;
@use '../variables/' as var;

.el_btn {
  display: inline-block;
  width: 100%;
  max-width: 152px;
  padding: 1em 0;

  &__yl {
    background: color(--c-accent);
    color: color(--c-white);
  }

  &__gr {
    background: color(--c-base);
    color: color(--c-white);
  }

  &__yl,
  &__gr {
    transition: scale 0.4s ease-in-out;

    @include mix.hover {
      scale: 1.1;
    }
  }

  &__kira {
    position: relative;
    overflow: hidden;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      width: 50%;
      height: 100%;
      transform: skewX(-25deg);
      animation: kiraAnime 3s infinite;
      background: linear-gradient(to right, color(--c-white, 0) 0%, color(--c-white, 0.3) 100%);
    }

    @keyframes kiraAnime {
      0% {
        left: -50%;
      }

      60%,
      100% {
        left: 150%;
      }
    }
  }

  @include mix.mq(lg) {
    min-width: 160px;
    max-width: 200px;
  }
}

.el_borderBtn {
  position: relative;
  overflow: hidden;
  transition: color 0.4s ease;
  border: 1px solid color(--c-base);
  color: color(--c-base);

  &::before {
    content: '';
    position: absolute;
    z-index: -1;
    top: 50%;
    left: -100%;
    width: 100%;
    height: 100%;
    transform: translateY(-50%);
    transition: left 0.4s ease-in-out;
    background: color(--c-base);
  }

  @include mix.hover {
    color: color(--c-white);

    &::before {
      left: 0;
    }
  }
}

.el_textBtn {
  display: inline-block;
  max-width: 100%;
  scale: 1;
  transition: scale 0.4s ease-out;

  @include mix.hover {
    scale: 1.1;
  }
}

.el_iconBtn {
  position: relative;
  padding-right: var(--size-space-md);

  &::after {
    content: '';
    position: absolute;
    top: 50%;
    right: 0;
    width: rem(16px);
    height: rem(16px);
    transform: translateY(-50%);
  }

  &__rtArrow {
    &_wh {
      color: color(--c-white);

      &::after {
        background: url(#{var.$img-path}icon/arrow-w.svg) no-repeat center center / contain;
      }
    }

    &_bk {
      color: color(--c-text);

      &::after {
        background: url(#{var.$img-path}icon/arrow-b.svg) no-repeat center center / contain;
      }
    }
  }
}

.el_headerBtn {
  width: 24px;
  height: 21px;

  svg {
    width: inherit;
    height: inherit;
  }

  rect {
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
    fill: color(--c-text);
  }

  &[aria-expanded='true'] {
    rect {
      &:nth-of-type(1) {
        transform: translate(3px, 2px) rotate(30deg);
      }

      &:nth-of-type(2) {
        opacity: 0;
      }

      &:nth-of-type(3) {
        transform: translate(-8px, 0) rotate(-30deg);
      }
    }
  }
}
